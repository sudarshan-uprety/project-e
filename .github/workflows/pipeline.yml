#name: build_main
#
#on:
#  push:
#    branches:
#      - dev
#      - uat
#      - prod
#
#jobs:
#  authentication-service:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        python-version: [ 3.9 ]
#
#    steps:
#      - name: Checkout code for deployment
#        uses: actions/checkout@v3
#
#      - name: Create .env file
#        run: |
#          run: |
#            if [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
#              echo "${{ vars.PROD_ENV }}" > .env
#            elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
#              echo "${{ vars.UAT_ENV }}" > .env
#            elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
#              echo "${{ vars.DEV_ENV }}" > .env
#            else
#              echo "This branch does not have corresponding environment variables"
#              exit 1
#            fi
#
#      - name: rsync deployments
#        uses: burnett01/rsync-deployments@master
#        with:
#          switches: -avzr --delete
#          path: ./
#          remote_path: ${{ vars.PATH }}${{ github.ref_name }}
#          remote_host: ${{ secrets.HOST }}
#          remote_user: ${{ secrets.SSH_USER }}
#          remote_key: ${{ secrets.SSH_KEY }}
#
#      - name: start the docker container
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.SSH_USER }}
#          key: ${{ secrets.SSH_KEY }}
#          script: |
#            cd ${{ vars.PATH }}${{ github.ref_name }}
#
#            if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
#              sudo docker-compose up -d elasticsearch auth_db_dev auth_service_dev --build
#            elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
#              sudo docker-compose up -d elasticsearch auth_db_uat auth_service_uat --build
#            elif [[ "${{ github.ref }}" == "refs/heads/prod" ]]; then
#              sudo docker-compose up -d elasticsearch auth_db_prod auth_service_prod --build
#            else
#              echo "Unexpected branch"
#              exit 1
#            fi
#            sudo docker image prune -a --force
